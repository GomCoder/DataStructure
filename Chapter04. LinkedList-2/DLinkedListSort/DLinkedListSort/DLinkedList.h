#ifndef __D_LINKED_LIST_H__
#define __D_LINKED_LIST_H__

#define TRUE 1
#define FALSE 0

typedef int LData;

typedef struct _node //노드의 구조체 표현
{
	LData data; //typedef int LData
	struct _node* next;
}Node;

typedef struct _linkedList //연결 리스트의 구조체 표현
{
	Node* head;	//더미 노드를 가리키는 멤버
	Node* cur; //참조 밒 삭제를 돕는 멤버
	Node* before; //삭제를 돕는 멤버
	int numOfData; //저장된 데이터의 수를 기록하기 위한 멤버
	int (*comp)(LData d1, LData d2); //정렬의 기준을 위한 멤버

}LinkedList;

typedef LinkedList List;

void ListInit(List* plist);
void LInsert(List* plist, LData data);

int LFirst(List* plist, LData* pdata);
int LNext(List* plist, LData* pdata);

LData LRemove(List* plist);
int LCount(List* plist);

void SetSortRule(List* plist, int (*comp)(LData d1, LData d2));

#endif 


